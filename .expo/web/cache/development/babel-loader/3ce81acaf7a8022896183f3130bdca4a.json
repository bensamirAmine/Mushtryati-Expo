{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLORS } from \"../../config/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar items = [{\n  id: 0,\n  image: require(\"../../assets/images/printer.png\"),\n  text: \"Printers\"\n}, {\n  id: 1,\n  image: require(\"../../assets/images/user-interface.png\"),\n  text: \"Phones and Tablets\"\n}, {\n  id: 2,\n  image: require(\"../../assets/images/desktop-computer.png\"),\n  text: \"Category 3\"\n}, {\n  id: 3,\n  image: require(\"../../assets/images/user-interface.png\"),\n  text: \"Category 4\"\n}, {\n  id: 4,\n  image: require(\"../../assets/images/gamepad.png\"),\n  text: \"Category 5\"\n}, {\n  id: 5,\n  image: require(\"../../assets/images/printer.png\"),\n  text: \"Category 6\"\n}, {\n  id: 6,\n  image: require(\"../../assets/images/desktop-computer.png\"),\n  text: \"Category 7\"\n}];\n\nfunction Categories(props) {\n  var _React$useState = React.useState(-5),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedCat = _React$useState2[0],\n      setSelectedCat = _React$useState2[1];\n\n  return _jsx(View, {\n    style: {\n      marginTop: 5,\n      backgroundColor: COLORS.white,\n      paddingVertical: 10,\n      paddingLeft: 20\n    },\n    children: _jsx(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      children: items.map(function (item, index) {\n        return _jsx(TouchableOpacity, {\n          style: {},\n          onPress: function onPress() {\n            setSelectedCat(item.id);\n          },\n          children: _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'center',\n              marginRight: 15,\n              marginTop: 5,\n              marginBottom: 5,\n              backgroundColor: COLORS.secondary,\n              padding: 5,\n              paddingHorizontal: 10,\n              borderRadius: 10,\n              backgroundColor: item.id == selectedCat ? COLORS.primary : COLORS.secondary\n            },\n            children: [_jsx(Image, {\n              source: item.image,\n              style: {\n                width: 30,\n                height: 30,\n                resizeMode: 'contain'\n              }\n            }), _jsxs(Text, {\n              style: {\n                fontSize: 13,\n                fontWeight: 'bold',\n                marginLeft: 10,\n                color: item.id == selectedCat ? COLORS.white : COLORS.black\n              },\n              children: [\" \", item.text, \" \"]\n            })]\n          })\n        }, index);\n      })\n    })\n  });\n}\n\nexport default Categories;","map":{"version":3,"sources":["C:/Users/Admin/Documents/bensamirWork/react-native/mushtryati/components/Home/Categories.js"],"names":["React","COLORS","items","id","image","require","text","Categories","props","useState","selectedCat","setSelectedCat","marginTop","backgroundColor","white","paddingVertical","paddingLeft","map","item","index","flexDirection","alignItems","marginRight","marginBottom","secondary","padding","paddingHorizontal","borderRadius","primary","width","height","resizeMode","fontSize","fontWeight","marginLeft","color","black"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Image, ScrollView, Text, View, TouchableOpacity } from 'react-native';\r\nimport { COLORS } from '../../config/colors';\r\nconst items = [\r\n    {\r\n        id: 0,\r\n        image: require('../../assets/images/printer.png'),\r\n        text: \"Printers\",\r\n    },\r\n    {\r\n        id: 1,\r\n        image: require('../../assets/images/user-interface.png'),\r\n        text: \"Phones and Tablets\",\r\n    },\r\n    {\r\n        id: 2,\r\n        image: require('../../assets/images/desktop-computer.png'),\r\n        text: \"Category 3\",\r\n    },\r\n    {\r\n        id: 3,\r\n        image: require('../../assets/images/user-interface.png'),\r\n        text: \"Category 4\",\r\n    },\r\n    {\r\n        id: 4,\r\n        image: require('../../assets/images/gamepad.png'),\r\n        text: \"Category 5\",\r\n    },\r\n    {\r\n        id: 5,\r\n        image: require('../../assets/images/printer.png'),\r\n        text: \"Category 6\",\r\n    },\r\n    {\r\n        id: 6,\r\n        image: require('../../assets/images/desktop-computer.png'),\r\n        text: \"Category 7\",\r\n    },\r\n]\r\nfunction Categories(props) {\r\n    const [selectedCat, setSelectedCat] = React.useState(-5);\r\n    \r\n    return (\r\n       <View style={{\r\n           marginTop:5,\r\n           backgroundColor: COLORS.white,\r\n           paddingVertical:10,\r\n           paddingLeft: 20,\r\n       }}>\r\n           <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n          {items.map((item,index)=>(\r\n\r\n               <TouchableOpacity key={index} style={{}}\r\n               onPress={() => {\r\n                setSelectedCat(item.id);\r\n                \r\n              }}\r\n               >\r\n                   <View  style={{\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                marginRight: 15,\r\n                marginTop:5,\r\n                marginBottom:5,\r\n                backgroundColor: COLORS.secondary,\r\n                padding:5,\r\n                paddingHorizontal:10,\r\n                borderRadius:10,\r\n                backgroundColor: item.id == selectedCat? COLORS.primary:COLORS.secondary,\r\n            }}\r\n            >\r\n                <Image source={item.image} style={{\r\n                    width: 30,\r\n                    height: 30,\r\n                    resizeMode: 'contain',\r\n                    \r\n                }} />\r\n                <Text style={{\r\n                    fontSize:13,\r\n                    fontWeight: 'bold',\r\n                    marginLeft:10,\r\n                    color: item.id == selectedCat? COLORS.white:COLORS.black,\r\n                }}> {item.text} </Text>\r\n            </View>\r\n               </TouchableOpacity>\r\n          ))}\r\n       </ScrollView>\r\n       </View>\r\n    );\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}