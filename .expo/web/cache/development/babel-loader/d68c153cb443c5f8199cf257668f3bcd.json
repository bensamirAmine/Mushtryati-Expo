{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { createDrawerNavigator, DrawerContentScrollView, useDrawerStatus } from '@react-navigation/drawer';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React from 'react';\nimport { COLORS } from \"../config/colors\";\nimport AntIcons from '@expo/vector-icons/AntDesign';\nimport Home from \"../screens/Home\";\nimport Animated from 'react-native-reanimated';\nimport Header from \"../components/Home/Header\";\nimport SearchBar from \"../components/Home/SearchBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\n\nvar CustomDrawerItem = function CustomDrawerItem(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon;\n  return _jsxs(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      height: 40,\n      marginBottom: 5,\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      borderRadius: 5,\n      marginRight: 15\n    },\n    children: [_jsx(Text, {\n      style: {\n        textAlign: 'center',\n        marginRight: 15,\n        fontWeight: 'bold',\n        fontSize: 15,\n        color: 'white'\n      },\n      children: label\n    }), _jsx(AntIcons, {\n      name: icon,\n      color: 'white',\n      size: 20\n    })]\n  });\n};\n\nvar CustomDrawerContent = function CustomDrawerContent(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(DrawerContentScrollView, {\n    scrollEnabled: true,\n    contentContainerStyle: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        paddingHorizontal: 15\n      },\n      children: [_jsx(View, {\n        style: {\n          alignItems: 'flex-start',\n          justifyContent: 'center'\n        },\n        children: _jsx(TouchableOpacity, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          onPress: function onPress() {\n            navigation.closeDrawer();\n          },\n          children: _jsx(AntIcons, {\n            name: \"close\",\n            color: 'white',\n            size: 35\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          flexDirection: 'row',\n          marginTop: 15,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 18,\n              fontWeight: 'bold',\n              textAlign: 'center'\n            },\n            children: \"\\u0645\\u062D\\u0645\\u062F \\u0623\\u0645\\u064A\\u0646 \\u0628\\u0646 \\u0633\\u0645\\u064A\\u0631\"\n          }), _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 12,\n              fontWeight: 'bold',\n              textAlign: 'center'\n            },\n            children: \"\\u0627\\u0644\\u0630\\u0647\\u0627\\u0628 \\u0625\\u0644\\u0649 \\u062D\\u0633\\u0627\\u0628\\u064A\"\n          })]\n        })\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          marginTop: 10\n        },\n        children: [_jsx(CustomDrawerItem, {\n          label: \"\\u0627\\u0644\\u0631\\u0626\\u064A\\u0633\\u064A\\u0629\",\n          icon: \"home\"\n        }), _jsx(CustomDrawerItem, {\n          label: \"\\u0627\\u0644\\u062A\\u0635\\u0646\\u064A\\u0641\\u0627\\u062A\",\n          icon: \"tago\"\n        }), _jsx(CustomDrawerItem, {\n          label: \"\\u0645\\u0634\\u062A\\u0631\\u064A\\u0627\\u062A\\u064A\",\n          icon: \"shoppingcart\"\n        }), _jsx(CustomDrawerItem, {\n          label: \"\\u0627\\u0644\\u0645\\u0641\\u0636\\u0644\\u0629\",\n          icon: \"hearto\"\n        }), _jsx(View, {\n          style: {\n            height: 1,\n            marginLeft: 15,\n            marginVertical: 15,\n            backgroundColor: '#ddd'\n          }\n        }), _jsx(CustomDrawerItem, {\n          label: \"\\u0627\\u0639\\u062F\\u0627\\u062F\\u0627\\u062A \\u0627\\u0644\\u062D\\u0633\\u0627\\u0628\",\n          icon: \"setting\"\n        }), _jsx(CustomDrawerItem, {\n          label: \"\\u0639\\u0646 \\u0645\\u0634\\u062A\\u0631\\u064A\\u0627\\u062A\\u064A\",\n          icon: \"infocirlceo\"\n        }), _jsx(CustomDrawerItem, {\n          label: \"\\u0627\\u062A\\u0635\\u0644 \\u0628\\u0646\\u0627\",\n          icon: \"message1\"\n        })]\n      }), _jsx(View, {\n        style: {\n          marginBottom: 10\n        },\n        children: _jsx(CustomDrawerItem, {\n          label: \"\\u062A\\u0633\\u062C\\u064A\\u0644 \\u0627\\u0644\\u062E\\u0631\\u0648\\u062C\",\n          icon: \"logout\"\n        })\n      })]\n    })\n  });\n};\n\nvar CustomDrawer = function CustomDrawer() {\n  var _React$useState = React.useState(new Animated.Value(0)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      progress = _React$useState2[0],\n      setProgress = _React$useState2[1];\n\n  var screenwidth = Dimensions.get('window').width;\n  var screenheight = Dimensions.get('window').height;\n  var scale = Animated.interpolateNode(progress, {\n    inputRange: [0, 1],\n    outputRange: [0, 0.8]\n  });\n  var borderRadius = Animated.interpolateNode(progress, {\n    inputRange: [0, 0.5],\n    outputRange: [0, 26]\n  });\n  var animatedStyle = {\n    borderRadius: borderRadius,\n    transform: [{\n      scale: scale\n    }]\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: Platform.OS === \"android\" ? COLORS.primary : COLORS.primary\n    },\n    children: _jsx(Drawer.Navigator, {\n      drawerType: \"slide\",\n      overlayColor: \"transparent\",\n      screenOptions: {\n        drawerStyle: {\n          flex: 1,\n          width: '65%',\n          paddingRight: 20,\n          backgroundColor: COLORS.primary\n        },\n        sceneContainerStyle: {\n          backgroundColor: 'transparent'\n        },\n        overlayColor: 'transparent',\n        headerShown: false\n      },\n      initialRouteName: \"Home\",\n      drawerContent: function drawerContent(props) {\n        setTimeout(function () {\n          setProgress(props.progress);\n        }, 0);\n        return _jsx(CustomDrawerContent, {\n          navigation: props.navigation\n        });\n      },\n      children: _jsx(Drawer.Screen, {\n        name: \"Home\",\n        children: function children(props) {\n          return _jsx(Home, _objectSpread(_objectSpread({}, props), {}, {\n            opened: false,\n            drawerAnimationStyle: {\n              height: screenheight - 100,\n              width: screenwidth,\n              marginTop: 80,\n              marginLeft: Platform.OS === 'android' ? 260 : 0\n            },\n            navigation: props.navigation\n          }));\n        }\n      })\n    })\n  });\n};\n\nexport default CustomDrawer;","map":{"version":3,"sources":["C:/Users/Admin/Documents/bensamirWork/react-native/mushtryati/navigation/CustomDrawer.js"],"names":["createDrawerNavigator","DrawerContentScrollView","useDrawerStatus","React","COLORS","AntIcons","Home","Animated","Header","SearchBar","Drawer","CustomDrawerItem","label","icon","flexDirection","height","marginBottom","alignItems","justifyContent","borderRadius","marginRight","textAlign","fontWeight","fontSize","color","CustomDrawerContent","navigation","flex","paddingHorizontal","closeDrawer","marginTop","marginLeft","marginVertical","backgroundColor","CustomDrawer","useState","Value","progress","setProgress","screenwidth","Dimensions","get","width","screenheight","scale","interpolateNode","inputRange","outputRange","animatedStyle","transform","Platform","OS","primary","drawerStyle","paddingRight","sceneContainerStyle","overlayColor","headerShown","props","setTimeout"],"mappings":"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","sourcesContent":["import { createDrawerNavigator, DrawerContentScrollView, useDrawerStatus } from '@react-navigation/drawer';\r\nimport { Text, TouchableOpacity, View, StatusBar, Platform, Dimensions } from 'react-native';\r\nimport React from 'react';\r\n\r\n\r\n\r\nimport { COLORS } from '../config/colors';\r\nimport AntIcons from '@expo/vector-icons/AntDesign';\r\n\r\nimport Home from '../screens/Home';\r\nimport Animated from 'react-native-reanimated';\r\nimport Header from '../components/Home/Header';\r\nimport SearchBar from '../components/Home/SearchBar';\r\n\r\n\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst CustomDrawerItem = ({label, icon}) => {\r\n    \r\n\r\n    return (\r\n        <TouchableOpacity\r\n         style={{\r\n             flexDirection: 'row',\r\n             height: 40,\r\n             marginBottom:5,\r\n             alignItems: 'center',\r\n             justifyContent: 'flex-end',\r\n             borderRadius:5,\r\n             marginRight:15,\r\n         }}\r\n        >\r\n             <Text\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginRight:15,\r\n                    fontWeight: 'bold',\r\n                    fontSize:15,\r\n                    color: 'white'\r\n                    \r\n                }}\r\n            >\r\n                {label}\r\n            </Text>\r\n            <AntIcons name={icon} color={'white'} size={20}/>\r\n           \r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nconst CustomDrawerContent = ({navigation})=>{\r\n\r\n   \r\n\r\n    return(\r\n        <DrawerContentScrollView\r\n        scrollEnabled={true}\r\n        contentContainerStyle={{\r\n            flex:1,\r\n        }}\r\n        >\r\n            <View\r\n            style={{\r\n                flex:1,\r\n                paddingHorizontal:15,\r\n\r\n            }}\r\n            >\r\n                \r\n                {/*close */}\r\n                <View\r\n                style={{\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'center',\r\n                }}\r\n                >\r\n                    <TouchableOpacity\r\n                        style={{\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        onPress={() => {navigation.closeDrawer();}}\r\n                    >\r\n                        <AntIcons name=\"close\" color={'white'} size={35} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                {/*Profile */}\r\n                <TouchableOpacity\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    marginTop:15,\r\n                    \r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                }}\r\n                >\r\n                    <View >\r\n                        <Text style={{\r\n                            color: 'white',\r\n                            fontSize:18,\r\n                            fontWeight: 'bold',\r\n                            textAlign:'center'\r\n\r\n                        }}>\r\n                            محمد أمين بن سمير\r\n                        </Text>\r\n                        <Text style={{\r\n                            color: 'white',\r\n                            fontSize:12,\r\n                            fontWeight: 'bold',\r\n                            textAlign:'center'\r\n\r\n                        }}>\r\n                            الذهاب إلى حسابي\r\n                        </Text>\r\n                    </View>\r\n\r\n                </TouchableOpacity>\r\n\r\n                <View\r\n                style={{\r\n                    flex: 1,\r\n                    marginTop:10,\r\n                }}\r\n                >\r\n                    <CustomDrawerItem\r\n                        label=\"الرئيسية\"\r\n                        icon=\"home\"\r\n                    />\r\n                    <CustomDrawerItem\r\n                        label=\"التصنيفات\"\r\n                        icon=\"tago\"\r\n                    />\r\n                    <CustomDrawerItem\r\n                        label=\"مشترياتي\"\r\n                        icon=\"shoppingcart\"\r\n                    />\r\n                    <CustomDrawerItem\r\n                        label=\"المفضلة\"\r\n                        icon=\"hearto\"\r\n                    />\r\n                <View style={{\r\n                    height:1,\r\n                    marginLeft:15,\r\n                    marginVertical:15,\r\n                    backgroundColor: '#ddd'\r\n                }}/>\r\n\r\n                <CustomDrawerItem\r\n                        label=\"اعدادات الحساب\"\r\n                        icon=\"setting\"\r\n                />  \r\n                <CustomDrawerItem\r\n                        label=\"عن مشترياتي\"\r\n                        icon=\"infocirlceo\"\r\n                />  \r\n                <CustomDrawerItem\r\n                        label=\"اتصل بنا\"\r\n                        icon=\"message1\"\r\n                />  \r\n                </View>\r\n                <View style={{\r\n                    marginBottom:10\r\n                }}>\r\n                <CustomDrawerItem\r\n                        label=\"تسجيل الخروج\"\r\n                        icon=\"logout\"\r\n                />  \r\n                </View>\r\n               \r\n\r\n                \r\n            </View>\r\n        </DrawerContentScrollView>\r\n    )\r\n}\r\n\r\nconst CustomDrawer = () => {\r\n  \r\n    const [progress,setProgress] = React.useState(new Animated.Value(0))\r\n    let screenwidth = Dimensions.get('window').width;\r\n    let screenheight = Dimensions.get('window').height;\r\n    const scale = Animated.interpolateNode(progress, {\r\n        inputRange: [0,1],\r\n        outputRange: [0,0.8] \r\n    })\r\n\r\n    const borderRadius = Animated.interpolateNode(progress, {\r\n        inputRange: [0,0.5],\r\n        outputRange: [0,26] \r\n    })\r\n    const animatedStyle = {borderRadius, transform: [{scale}]}\r\n    \r\n    return (\r\n        <View\r\n        style={{\r\n            flex: 1,\r\n            backgroundColor:  Platform.OS === \"android\"? COLORS.primary:COLORS.primary ,\r\n            \r\n        }}\r\n        >\r\n            \r\n            <Drawer.Navigator\r\n            drawerType=\"slide\"\r\n            overlayColor=\"transparent\"\r\n            screenOptions={{\r\n                drawerStyle: {\r\n                    flex: 1,\r\n                    width: '65%',\r\n                    paddingRight:20,\r\n                    backgroundColor:COLORS.primary,\r\n                    \r\n                },\r\n                sceneContainerStyle: {\r\n                    backgroundColor:'transparent'\r\n                },\r\n                overlayColor: 'transparent',\r\n                headerShown: false\r\n              }}\r\n           \r\n            \r\n            initialRouteName=\"Home\"\r\n            drawerContent={props => {\r\n                setTimeout(()=>{\r\n                    setProgress(props.progress)\r\n                },0)\r\n                \r\n                return (\r\n                    <CustomDrawerContent\r\n                    navigation={props.navigation}\r\n                    />\r\n                )\r\n            }}\r\n            >\r\n                <Drawer.Screen name=\"Home\">\r\n                   \r\n                    {props => <Home  {...props} opened={false} drawerAnimationStyle={{height:screenheight -100,width:screenwidth,marginTop:80,marginLeft:Platform.OS==='android'?260:0}} navigation={props.navigation} />}\r\n                </Drawer.Screen>\r\n            </Drawer.Navigator>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CustomDrawer;"]},"metadata":{},"sourceType":"module"}