{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { COLORS } from \"../../config/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TextButton = function TextButton(_ref) {\n  var label = _ref.label,\n      imageUrl = _ref.imageUrl,\n      labelStyle = _ref.labelStyle,\n      buttonContainerStyle = _ref.buttonContainerStyle,\n      onPress = _ref.onPress,\n      withImage = _ref.withImage;\n  return _jsxs(TouchableOpacity, {\n    style: _objectSpread({\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: COLORS.primary,\n      flexDirection: 'row'\n    }, buttonContainerStyle),\n    onPress: onPress,\n    children: [withImage && _jsx(Image, {\n      source: imageUrl,\n      style: {\n        width: 30,\n        height: 30,\n        resizeMode: 'contain',\n        marginRight: 7\n      }\n    }), _jsx(Text, {\n      style: _objectSpread({\n        color: COLORS.white,\n        fontWeight: 'bold',\n        fontSize: 15\n      }, labelStyle),\n      numberOfLines: 1,\n      children: label\n    })]\n  });\n};\n\nexport default TextButton;","map":{"version":3,"sources":["C:/Users/Admin/Documents/bensamirWork/react-native/mushtryati/components/inputs/TextButton.js"],"names":["React","COLORS","TextButton","label","imageUrl","labelStyle","buttonContainerStyle","onPress","withImage","alignItems","justifyContent","backgroundColor","primary","flexDirection","width","height","resizeMode","marginRight","color","white","fontWeight","fontSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA6E;AAAA,MAA3EC,KAA2E,QAA3EA,KAA2E;AAAA,MAApEC,QAAoE,QAApEA,QAAoE;AAAA,MAA1DC,UAA0D,QAA1DA,UAA0D;AAAA,MAA9CC,oBAA8C,QAA9CA,oBAA8C;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAC5F,SACI,MAAC,gBAAD;AACI,IAAA,KAAK;AACDC,MAAAA,UAAU,EAAE,QADX;AAEDC,MAAAA,cAAc,EAAE,QAFf;AAGDC,MAAAA,eAAe,EAAEV,MAAM,CAACW,OAHvB;AAIDC,MAAAA,aAAa,EAAE;AAJd,OAKEP,oBALF,CADT;AAQI,IAAA,OAAO,EAAEC,OARb;AAAA,eAUCC,SAAS,IACN,KAAC,KAAD;AAAO,MAAA,MAAM,EAAEJ,QAAf;AAAyB,MAAA,KAAK,EAAE;AAC5BU,QAAAA,KAAK,EAAE,EADqB;AAE5BC,QAAAA,MAAM,EAAE,EAFoB;AAG5BC,QAAAA,UAAU,EAAE,SAHgB;AAK5BC,QAAAA,WAAW,EAAC;AALgB;AAAhC,MAXJ,EAqBI,KAAC,IAAD;AACA,MAAA,KAAK;AACDC,QAAAA,KAAK,EAAEjB,MAAM,CAACkB,KADb;AAEDC,QAAAA,UAAU,EAAE,MAFX;AAGDC,QAAAA,QAAQ,EAAE;AAHT,SAIEhB,UAJF,CADL;AAOA,MAAA,aAAa,EAAE,CAPf;AAAA,gBASKF;AATL,MArBJ;AAAA,IADJ;AAoCH,CArCD;;AAuCA,eAAeD,UAAf","sourcesContent":["import React from 'react';\r\nimport { TouchableOpacity, Text, Image } from 'react-native';\r\nimport { COLORS } from '../../config/colors';\r\n\r\nconst TextButton = ({label, imageUrl, labelStyle, buttonContainerStyle, onPress, withImage }) =>{\r\n    return (\r\n        <TouchableOpacity\r\n            style={{\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: COLORS.primary,\r\n                flexDirection: 'row',\r\n                ...buttonContainerStyle\r\n            }}\r\n            onPress={onPress}\r\n        >\r\n        {withImage &&\r\n            <Image source={imageUrl} style={{\r\n                width: 30,\r\n                height: 30,\r\n                resizeMode: 'contain',\r\n                \r\n                marginRight:7,\r\n            }} />\r\n        }\r\n            \r\n\r\n            <Text\r\n            style={{\r\n                color: COLORS.white,\r\n                fontWeight: 'bold',\r\n                fontSize: 15,\r\n                ...labelStyle\r\n            }}\r\n            numberOfLines={1}\r\n            >\r\n                {label}\r\n            </Text>\r\n\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nexport default TextButton;"]},"metadata":{},"sourceType":"module"}