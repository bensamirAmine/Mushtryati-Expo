{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Categories from \"../components/Home/Categories\";\nimport Header from \"../components/Home/Header\";\nimport ReastaurentItems, { localRestaurents } from \"../components/Home/ReastaurentItems\";\nimport SearchBar from \"../components/Home/SearchBar\";\nimport { COLORS } from \"../config/colors\";\nimport { screens, icons } from \"../config/constants\";\nimport IonIcons from \"@expo/vector-icons/Ionicons\";\nimport { useSharedValue, withTiming, useAnimatedStyle, Easing } from 'react-native-reanimated';\nimport Index from \"./Index\";\nimport FilterModal from \"../components/Home/FilterModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Home(props) {\n  var _React$useState = React.useState(screens.home),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedTab = _React$useState2[0],\n      setSelectedTab = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showFilterModal = _React$useState4[0],\n      setShowFilterModal = _React$useState4[1];\n\n  var showModal = function showModal() {\n    setShowFilterModal(!showFilterModal);\n  };\n\n  var onChangeStyle = StyleSheet.create({\n    innerStyle: {\n      backgroundColor: COLORS.primary\n    }\n  });\n\n  var TabButton = function TabButton(_ref) {\n    var label = _ref.label,\n        icon = _ref.icon,\n        isFocused = _ref.isFocused,\n        onPress = _ref.onPress,\n        innerStyle = _ref.innerStyle,\n        bgStyle = _ref.bgStyle,\n        flexStyle = _ref.flexStyle;\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: onPress,\n      children: _jsx(Animated.View, {\n        style: [{\n          flex: flexStyle,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }],\n        children: _jsxs(Animated.View, {\n          style: [{\n            flexDirection: 'row',\n            width: \"80%\",\n            height: 50,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 25,\n            backgroundColor: bgStyle\n          }],\n          children: [_jsx(IonIcons, {\n            name: icon,\n            size: 20,\n            color: isFocused ? COLORS.white : COLORS.black\n          }), isFocused && _jsx(Text, {\n            numberOfLines: 1,\n            style: {\n              marginLeft: 10,\n              color: isFocused ? COLORS.white : COLORS.black\n            },\n            children: label\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: {\n        backgroundColor: COLORS.white,\n        padding: 15\n      },\n      children: [_jsx(Header, {}), _jsx(SearchBar, {\n        showModal: showModal\n      })]\n    }), _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [showFilterModal && _jsx(FilterModal, {\n        isVisible: showFilterModal,\n        onClose: function onClose() {\n          return setShowFilterModal(false);\n        }\n      }), _jsx(Index, {})]\n    }), _jsxs(View, {\n      style: {\n        height: 80,\n        justifyContent: 'flex-end'\n      },\n      children: [_jsx(LinearGradient, {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 4\n        },\n        colors: [COLORS.transparent, COLORS.primary],\n        style: {\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          height: 50,\n          borderTopLeftRadius: 15,\n          borderTopRightRadius: 15\n        }\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingHorizontal: 12,\n          paddingBottom: 10,\n          paddingTop: 10,\n          borderTopLeftRadius: 20,\n          borderTopRightRadius: 20,\n          backgroundColor: COLORS.white\n        },\n        children: [_jsx(TabButton, {\n          label: screens.home,\n          icon: icons.home,\n          isFocused: selectedTab == screens.home,\n          flexStyle: selectedTab == screens.home ? 4 : 1,\n          bgStyle: selectedTab == screens.home ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.home);\n          }\n        }), _jsx(TabButton, {\n          label: screens.search,\n          icon: icons.search,\n          isFocused: selectedTab == screens.search,\n          flexStyle: selectedTab == screens.search ? 4 : 1,\n          bgStyle: selectedTab == screens.search ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.search);\n          }\n        }), _jsx(TabButton, {\n          label: screens.cart,\n          icon: icons.cart,\n          isFocused: selectedTab == screens.cart,\n          flexStyle: selectedTab == screens.cart ? 4 : 1,\n          bgStyle: selectedTab == screens.cart ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.cart);\n          }\n        }), _jsx(TabButton, {\n          label: screens.favourite,\n          icon: icons.favourite,\n          isFocused: selectedTab == screens.favourite,\n          flexStyle: selectedTab == screens.favourite ? 4 : 1,\n          bgStyle: selectedTab == screens.favourite ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.favourite);\n          }\n        }), _jsx(TabButton, {\n          label: screens.notification,\n          icon: icons.notification,\n          isFocused: selectedTab == screens.notification,\n          flexStyle: selectedTab == screens.notification ? 4 : 1,\n          bgStyle: selectedTab == screens.notification ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.notification);\n          }\n        })]\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/Admin/Documents/bensamirWork/react-native/mushtryati/screens/Home.js"],"names":["LinearGradient","React","Categories","Header","ReastaurentItems","localRestaurents","SearchBar","COLORS","screens","icons","IonIcons","useSharedValue","withTiming","useAnimatedStyle","Easing","Index","FilterModal","Home","props","useState","home","selectedTab","setSelectedTab","showFilterModal","setShowFilterModal","showModal","onChangeStyle","StyleSheet","create","innerStyle","backgroundColor","primary","TabButton","label","icon","isFocused","onPress","bgStyle","flexStyle","flex","alignItems","justifyContent","flexDirection","width","height","borderRadius","white","black","marginLeft","color","styles","container","padding","x","y","transparent","position","left","right","borderTopLeftRadius","borderTopRightRadius","paddingHorizontal","paddingBottom","paddingTop","search","cart","favourite","notification","secondary","marginTop","Platform","OS","StatusBar","currentHeight"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\r\nimport React from 'react';\r\nimport { StyleSheet, SafeAreaView, Text, View, StatusBar, Platform, ScrollView, Animated,TouchableWithoutFeedback } from 'react-native';\r\nimport Categories from '../components/Home/Categories';\r\nimport Header from '../components/Home/Header';\r\nimport ReastaurentItems, { localRestaurents } from '../components/Home/ReastaurentItems';\r\nimport SearchBar from '../components/Home/SearchBar';\r\n\r\nimport { COLORS } from '../config/colors';\r\nimport { screens, icons } from '../config/constants';\r\nimport IonIcons from 'react-native-vector-icons/Ionicons'\r\nimport {\r\n    useSharedValue,\r\n    withTiming,\r\n    useAnimatedStyle,\r\n    Easing,\r\n  } from 'react-native-reanimated';\r\nimport Index from './Index';\r\nimport FilterModal from '../components/Home/FilterModal';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const [selectedTab, setSelectedTab] = React.useState(screens.home);\r\n    const [showFilterModal, setShowFilterModal] = React.useState(false);\r\n    \r\n    const showModal = () => {\r\n        setShowFilterModal(!showFilterModal);\r\n      }\r\n    const onChangeStyle = StyleSheet.create({ \r\n            innerStyle:{\r\n                backgroundColor:COLORS.primary\r\n            }\r\n    })\r\n      \r\n\r\n    const TabButton =({label, icon, isFocused, onPress, innerStyle, bgStyle,flexStyle }) =>{\r\n        \r\n     \r\n        return(\r\n            <TouchableWithoutFeedback\r\n                onPress={onPress}\r\n               \r\n            >\r\n                <Animated.View\r\n                style={[\r\n                    {\r\n                        flex:flexStyle,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center', \r\n                        \r\n                        },      \r\n                ]}>\r\n                    \r\n                    <Animated.View\r\n                    style={[\r\n                        {\r\n                            flexDirection: 'row',\r\n                            width: \"80%\",\r\n                            height: 50,\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            borderRadius:25,\r\n                            backgroundColor: bgStyle,\r\n                            \r\n                        },\r\n                        \r\n                            \r\n                        \r\n                    ]}>\r\n                        <IonIcons name={icon} size={20} color={ isFocused? COLORS.white:COLORS.black}  />\r\n                        {isFocused &&\r\n                            <Text\r\n                                numberOfLines={1}\r\n                                style={{\r\n                                    marginLeft: 10,\r\n                                    color: isFocused? COLORS.white:COLORS.black,\r\n                                }}\r\n                            >{ label }</Text>\r\n                        }\r\n                    </Animated.View>\r\n                </Animated.View>\r\n            </TouchableWithoutFeedback>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        \r\n        <SafeAreaView style={styles.container}>\r\n           \r\n        <View style={{\r\n            backgroundColor: COLORS.white,\r\n            padding: 15,\r\n        }}>\r\n        <Header/>\r\n        <SearchBar\r\n         showModal={showModal}\r\n        />\r\n        </View>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n        { showFilterModal &&\r\n            <FilterModal\r\n            isVisible={showFilterModal}\r\n            onClose={()=> setShowFilterModal(false)}\r\n            \r\n            />\r\n            }\r\n           {/* <ReastaurentItems restaurentData={restaurentData}/>*/} \r\n          \r\n          <Index/>\r\n\r\n        </ScrollView>\r\n        {/* Footer */}\r\n        <View \r\n        style={{\r\n            height:80,\r\n            justifyContent: 'flex-end',\r\n        }}> \r\n\r\n            {/* Shadow */}\r\n            <LinearGradient\r\n                    start={{\r\n                        x: 0,\r\n                        y:0\r\n                    }}\r\n                    end={{\r\n                        x: 0,\r\n                        y: 4,\r\n                    }}\r\n                    colors={[\r\n                        COLORS.transparent,\r\n                        COLORS.primary\r\n                    ]}\r\n                    style={{\r\n                        position: 'absolute',\r\n                        left:0,\r\n                        right:0,\r\n                        height:50,\r\n                        borderTopLeftRadius:15,\r\n                        borderTopRightRadius:15,\r\n                    }}\r\n                    />\r\n                    {/* Tabs */}\r\n                    <View\r\n                        style={{\r\n                            flex:1,\r\n                            flexDirection: 'row',\r\n                            paddingHorizontal: 12,\r\n                            paddingBottom:10,\r\n                            paddingTop:10,\r\n                            borderTopLeftRadius:20,\r\n                            borderTopRightRadius:20,\r\n                            backgroundColor: COLORS.white,\r\n                            \r\n\r\n                        }}>\r\n\r\n                            <TabButton\r\n                                \r\n                                label={screens.home}\r\n                                icon={icons.home}\r\n                                isFocused={selectedTab == screens.home}\r\n                                flexStyle = {selectedTab == screens.home? 4:1}\r\n                                bgStyle = {selectedTab == screens.home? COLORS.primary:COLORS.white}\r\n                                onPress={() => setSelectedTab(screens.home)}\r\n                                \r\n                            />\r\n                            <TabButton\r\n                                label={screens.search}\r\n                                icon={icons.search}\r\n                                isFocused={selectedTab == screens.search}\r\n                                flexStyle = {selectedTab == screens.search? 4:1}\r\n                                bgStyle = {selectedTab == screens.search? COLORS.primary:COLORS.white}\r\n                                onPress={() => setSelectedTab(screens.search)}\r\n                               \r\n                            />\r\n                            <TabButton\r\n                                label={screens.cart}\r\n                                icon={icons.cart}\r\n                                isFocused={selectedTab == screens.cart}\r\n                                flexStyle = {selectedTab == screens.cart? 4:1}\r\n                                bgStyle = {selectedTab == screens.cart? COLORS.primary:COLORS.white}\r\n                                onPress={() => setSelectedTab(screens.cart)}\r\n                                \r\n                                \r\n                            />\r\n                            <TabButton\r\n                                label={screens.favourite}\r\n                                icon={icons.favourite}\r\n                                isFocused={selectedTab == screens.favourite}\r\n                                flexStyle = {selectedTab == screens.favourite? 4:1}\r\n                                bgStyle = {selectedTab == screens.favourite? COLORS.primary:COLORS.white}\r\n                                onPress={() => setSelectedTab(screens.favourite)}\r\n                                \r\n                            />\r\n                            <TabButton\r\n                                label={screens.notification}\r\n                                icon={icons.notification}\r\n                                isFocused={selectedTab == screens.notification}\r\n                                flexStyle = {selectedTab == screens.notification? 4:1}\r\n                                bgStyle = {selectedTab == screens.notification? COLORS.primary:COLORS.white}\r\n                                onPress={() => setSelectedTab(screens.notification)}\r\n                                \r\n                            />\r\n\r\n\r\n                    </View>\r\n        </View>\r\n    </SafeAreaView>\r\n    \r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor: COLORS.secondary,\r\n        marginTop: Platform.OS === \"android\"? StatusBar.currentHeight:0,\r\n    }\r\n})\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}