{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Categories from \"../components/Home/Categories\";\nimport Header from \"../components/Home/Header\";\nimport ReastaurentItems, { localRestaurents } from \"../components/Home/ReastaurentItems\";\nimport SearchBar from \"../components/Home/SearchBar\";\nimport { COLORS } from \"../config/colors\";\nimport { screens, icons } from \"../config/constants\";\nimport IonIcons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Home(props) {\n  var _React$useState = React.useState(screens.home),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedTab = _React$useState2[0],\n      setSelectedTab = _React$useState2[1];\n\n  var TabButton = function TabButton(_ref) {\n    var label = _ref.label,\n        icon = _ref.icon,\n        isFocused = _ref.isFocused,\n        onPress = _ref.onPress,\n        bgColor = _ref.bgColor;\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: onPress,\n      children: _jsx(Animated.View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsxs(Animated.View, {\n          style: {\n            flexDirection: 'row',\n            width: \"80%\",\n            height: 50,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 25,\n            backgroundColor: bgColor\n          },\n          children: [_jsx(IonIcons, {\n            name: icon,\n            size: 20\n          }), isFocused && _jsx(Text, {\n            numberOfLines: 1,\n            style: {\n              marginLeft: 10,\n              color: COLORS.black\n            },\n            children: label\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: {\n        backgroundColor: COLORS.white,\n        padding: 15\n      },\n      children: [_jsx(Header, {}), _jsx(SearchBar, {})]\n    }), _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(Categories, {}), _jsx(Text, {\n        children: \"hello\"\n      })]\n    }), _jsxs(View, {\n      style: {\n        height: 100,\n        justifyContent: 'flex-end'\n      },\n      children: [_jsx(LinearGradient, {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 4\n        },\n        colors: [COLORS.transparent, COLORS.primary],\n        style: {\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          height: 50,\n          borderTopLeftRadius: 15,\n          borderTopRightRadius: 15\n        }\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingHorizontal: 12,\n          paddingBottom: 10,\n          borderTopLeftRadius: 20,\n          borderTopRightRadius: 20,\n          backgroundColor: COLORS.white\n        },\n        children: [_jsx(TabButton, {\n          label: screens.home,\n          icon: icons.home,\n          isFocused: selectedTab == screens.home,\n          onPress: function onPress() {\n            return setSelectedTab(screens.home);\n          },\n          bgColor: selectedTab == screens.home ? COLORS.primary : COLORS.white\n        }), _jsx(TabButton, {\n          label: screens.search,\n          icon: icons.search,\n          isFocused: selectedTab == screens.search,\n          onPress: function onPress() {\n            return setSelectedTab(screens.search);\n          },\n          bgColor: selectedTab == screens.search ? COLORS.primary : COLORS.white\n        }), _jsx(TabButton, {\n          label: screens.cart,\n          icon: icons.cart,\n          isFocused: selectedTab == screens.cart,\n          onPress: function onPress() {\n            return setSelectedTab(screens.cart);\n          },\n          bgColor: selectedTab == screens.cart ? COLORS.primary : COLORS.white\n        }), _jsx(TabButton, {\n          label: screens.favourite,\n          icon: icons.favourite,\n          isFocused: selectedTab == screens.favourite,\n          onPress: function onPress() {\n            return setSelectedTab(screens.favourite);\n          },\n          bgColor: selectedTab == screens.favourite ? COLORS.primary : COLORS.white\n        }), _jsx(TabButton, {\n          label: screens.notification,\n          icon: icons.notification,\n          isFocused: selectedTab == screens.notification,\n          onPress: function onPress() {\n            return setSelectedTab(screens.notification);\n          },\n          bgColor: selectedTab == screens.notification ? COLORS.primary : COLORS.white\n        })]\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/Admin/Documents/bensamirWork/react-native/mushtryati/screens/Home.js"],"names":["LinearGradient","React","Categories","Header","ReastaurentItems","localRestaurents","SearchBar","COLORS","screens","icons","IonIcons","Home","props","useState","home","selectedTab","setSelectedTab","TabButton","label","icon","isFocused","onPress","bgColor","flex","alignItems","justifyContent","flexDirection","width","height","borderRadius","backgroundColor","marginLeft","color","black","styles","container","white","padding","x","y","transparent","primary","position","left","right","borderTopLeftRadius","borderTopRightRadius","paddingHorizontal","paddingBottom","search","cart","favourite","notification","StyleSheet","create","secondary","marginTop","Platform","OS","StatusBar","currentHeight"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\r\nimport React from 'react';\r\nimport { StyleSheet, SafeAreaView, Text, View, StatusBar, Platform, ScrollView, Animated,TouchableWithoutFeedback } from 'react-native';\r\nimport Categories from '../components/Home/Categories';\r\nimport Header from '../components/Home/Header';\r\nimport ReastaurentItems, { localRestaurents } from '../components/Home/ReastaurentItems';\r\nimport SearchBar from '../components/Home/SearchBar';\r\nimport { COLORS } from '../config/colors';\r\nimport { screens, icons } from '../config/constants';\r\nimport IonIcons from 'react-native-vector-icons/Ionicons'\r\nfunction Home(props) {\r\n    const [selectedTab, setSelectedTab] = React.useState(screens.home);\r\n    const TabButton =({label, icon, isFocused, onPress,bgColor}) =>{\r\n        \r\n        return(\r\n            <TouchableWithoutFeedback\r\n                onPress={onPress}\r\n               \r\n            >\r\n                <Animated.View\r\n                style={{\r\n                    flex:1,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center', \r\n                }}>\r\n                    <Animated.View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        width: \"80%\",\r\n                        height: 50,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        borderRadius:25,\r\n                        backgroundColor: bgColor\r\n                    }}>\r\n                        <IonIcons name={icon} size={20}  />\r\n                        {isFocused &&\r\n                            <Text\r\n                                numberOfLines={1}\r\n                                style={{\r\n                                    marginLeft: 10,\r\n                                    color: COLORS.black,\r\n                                    \r\n                                }}\r\n                            >{ label }</Text>\r\n                        }\r\n                    </Animated.View>\r\n                </Animated.View>\r\n            </TouchableWithoutFeedback>\r\n        )\r\n    }\r\n    return (\r\n        \r\n        <SafeAreaView style={styles.container}>\r\n        <View style={{\r\n            backgroundColor: COLORS.white,\r\n            padding: 15,\r\n        }}>\r\n        <Header/>\r\n        <SearchBar/>\r\n        </View>\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n            <Categories/>\r\n           {/* <ReastaurentItems restaurentData={restaurentData}/>*/} \r\n          <Text>hello</Text>\r\n\r\n        </ScrollView>\r\n        {/* Footer */}\r\n        <View \r\n        style={{\r\n            height:100,\r\n            justifyContent: 'flex-end',\r\n        }}> \r\n\r\n            {/* Shadow */}\r\n            <LinearGradient\r\n                    start={{\r\n                        x: 0,\r\n                        y:0\r\n                    }}\r\n                    end={{\r\n                        x: 0,\r\n                        y: 4,\r\n                    }}\r\n                    colors={[\r\n                        COLORS.transparent,\r\n                        COLORS.primary\r\n                    ]}\r\n                    style={{\r\n                        position: 'absolute',\r\n                        left:0,\r\n                        right:0,\r\n                        height:50,\r\n                        borderTopLeftRadius:15,\r\n                        borderTopRightRadius:15,\r\n                    }}\r\n                    />\r\n                    {/* Tabs */}\r\n                    <View\r\n                        style={{\r\n                            flex:1,\r\n                            flexDirection: 'row',\r\n                            paddingHorizontal: 12,\r\n                            paddingBottom:10,\r\n                            borderTopLeftRadius:20,\r\n                            borderTopRightRadius:20,\r\n                            backgroundColor: COLORS.white,\r\n                            \r\n\r\n                        }}>\r\n\r\n                            <TabButton\r\n                                \r\n                                label={screens.home}\r\n                                icon={icons.home}\r\n                                isFocused={selectedTab == screens.home}\r\n                                onPress={() => setSelectedTab(screens.home)}\r\n                                bgColor={ selectedTab== screens.home? COLORS.primary:COLORS.white}\r\n                            />\r\n                            <TabButton\r\n                                label={screens.search}\r\n                                icon={icons.search}\r\n                                isFocused={selectedTab == screens.search}\r\n                                onPress={() => setSelectedTab(screens.search)}\r\n                                bgColor={ selectedTab== screens.search? COLORS.primary:COLORS.white}\r\n                            />\r\n                            <TabButton\r\n                                label={screens.cart}\r\n                                icon={icons.cart}\r\n                                isFocused={selectedTab == screens.cart}\r\n                                onPress={() => setSelectedTab(screens.cart)}\r\n                                bgColor={ selectedTab== screens.cart? COLORS.primary:COLORS.white}\r\n                                \r\n                            />\r\n                            <TabButton\r\n                                label={screens.favourite}\r\n                                icon={icons.favourite}\r\n                                isFocused={selectedTab == screens.favourite}\r\n                                onPress={() => setSelectedTab(screens.favourite)}\r\n                                bgColor={ selectedTab== screens.favourite? COLORS.primary:COLORS.white}\r\n                            />\r\n                            <TabButton\r\n                                label={screens.notification}\r\n                                icon={icons.notification}\r\n                                isFocused={selectedTab == screens.notification}\r\n                                onPress={() => setSelectedTab(screens.notification)}\r\n                                bgColor={ selectedTab== screens.notification? COLORS.primary:COLORS.white}\r\n                            />\r\n\r\n\r\n                    </View>\r\n        </View>\r\n    </SafeAreaView>\r\n    \r\n    );\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor: COLORS.secondary,\r\n        marginTop: Platform.OS === \"android\"? StatusBar.currentHeight:0,\r\n    }\r\n})\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}