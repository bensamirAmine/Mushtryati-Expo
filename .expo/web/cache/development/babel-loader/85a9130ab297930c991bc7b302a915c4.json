{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Categories from \"../components/Home/Categories\";\nimport Header from \"../components/Home/Header\";\nimport ReastaurentItems, { localRestaurents } from \"../components/Home/ReastaurentItems\";\nimport SearchBar from \"../components/Home/SearchBar\";\nimport { COLORS } from \"../config/colors\";\nimport { screens, icons } from \"../config/constants\";\nimport IonIcons from \"@expo/vector-icons/Ionicons\";\nimport Animated, { useSharedValue, withTiming, useAnimatedStyle, Easing } from 'react-native-reanimated';\nimport Index from \"./Index\";\nimport FilterModal from \"../components/Home/FilterModal\";\nimport { useDrawerStatus } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function Home(_ref) {\n  var drawerAnimationStyle = _ref.drawerAnimationStyle,\n      navigation = _ref.navigation,\n      opened = _ref.opened;\n  var isDrawerOpen = useDrawerStatus() === 'open';\n\n  var _React$useState = React.useState(screens.home),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedTab = _React$useState2[0],\n      setSelectedTab = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showFilterModal = _React$useState4[0],\n      setShowFilterModal = _React$useState4[1];\n\n  var screenwidth = Dimensions.get('window').width;\n  var screenheight = Dimensions.get('window').height;\n\n  var showModal = function showModal() {\n    setShowFilterModal(!showFilterModal);\n  };\n\n  var onChangeStyle = StyleSheet.create({\n    innerStyle: {\n      backgroundColor: COLORS.primary\n    }\n  });\n\n  var TabButton = function TabButton(_ref2) {\n    var label = _ref2.label,\n        icon = _ref2.icon,\n        isFocused = _ref2.isFocused,\n        onPress = _ref2.onPress,\n        innerStyle = _ref2.innerStyle,\n        bgStyle = _ref2.bgStyle,\n        flexStyle = _ref2.flexStyle;\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: onPress,\n      children: _jsx(Animated.View, {\n        style: [{\n          flex: flexStyle,\n          alignItems: 'center',\n          justifyContent: 'center'\n        }],\n        children: _jsxs(Animated.View, {\n          style: [{\n            flexDirection: 'row',\n            width: \"80%\",\n            height: 50,\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 25,\n            backgroundColor: bgStyle\n          }],\n          children: [_jsx(IonIcons, {\n            name: icon,\n            size: 20,\n            color: isFocused ? COLORS.white : COLORS.black\n          }), isFocused && _jsx(Text, {\n            numberOfLines: 1,\n            style: {\n              marginLeft: 10,\n              color: isFocused ? COLORS.white : COLORS.black\n            },\n            children: label\n          })]\n        })\n      })\n    });\n  };\n\n  if (!isDrawerOpen) {\n    drawerAnimationStyle = {};\n  }\n\n  return _jsxs(Animated.View, {\n    style: _objectSpread({\n      backgroundColor: COLORS.secondary,\n      borderRadius: 25,\n      height: '100%'\n    }, drawerAnimationStyle),\n    children: [_jsxs(View, {\n      style: {\n        backgroundColor: COLORS.white,\n        borderRadius: isDrawerOpen ? 25 : 0,\n        padding: 15,\n        paddingTop: StatusBar.currentHeight\n      },\n      children: [_jsx(Header, {\n        navigation: navigation\n      }), _jsx(SearchBar, {\n        showModal: showModal\n      })]\n    }), _jsxs(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: [showFilterModal && _jsx(FilterModal, {\n        isVisible: showFilterModal,\n        onClose: function onClose() {\n          return setShowFilterModal(false);\n        }\n      }), _jsx(Index, {})]\n    }), _jsxs(View, {\n      style: {\n        height: 80,\n        justifyContent: 'flex-end'\n      },\n      children: [_jsx(LinearGradient, {\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 4\n        },\n        colors: [COLORS.transparent, COLORS.primary],\n        style: {\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          height: 50,\n          borderTopLeftRadius: 15,\n          borderTopRightRadius: 15\n        }\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          paddingHorizontal: 12,\n          paddingBottom: 10,\n          paddingTop: 10,\n          borderTopLeftRadius: 20,\n          borderTopRightRadius: 20,\n          backgroundColor: COLORS.white,\n          borderRadius: isDrawerOpen ? 25 : 0\n        },\n        children: [_jsx(TabButton, {\n          label: screens.home,\n          icon: icons.home,\n          isFocused: selectedTab == screens.home,\n          flexStyle: selectedTab == screens.home ? 4 : 1,\n          bgStyle: selectedTab == screens.home ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.home);\n          }\n        }), _jsx(TabButton, {\n          label: screens.search,\n          icon: icons.search,\n          isFocused: selectedTab == screens.search,\n          flexStyle: selectedTab == screens.search ? 4 : 1,\n          bgStyle: selectedTab == screens.search ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.search);\n          }\n        }), _jsx(TabButton, {\n          label: screens.cart,\n          icon: icons.cart,\n          isFocused: selectedTab == screens.cart,\n          flexStyle: selectedTab == screens.cart ? 4 : 1,\n          bgStyle: selectedTab == screens.cart ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.cart);\n          }\n        }), _jsx(TabButton, {\n          label: screens.favourite,\n          icon: icons.favourite,\n          isFocused: selectedTab == screens.favourite,\n          flexStyle: selectedTab == screens.favourite ? 4 : 1,\n          bgStyle: selectedTab == screens.favourite ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.favourite);\n          }\n        }), _jsx(TabButton, {\n          label: screens.notification,\n          icon: icons.notification,\n          isFocused: selectedTab == screens.notification,\n          flexStyle: selectedTab == screens.notification ? 4 : 1,\n          bgStyle: selectedTab == screens.notification ? COLORS.primary : COLORS.white,\n          onPress: function onPress() {\n            return setSelectedTab(screens.notification);\n          }\n        })]\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: COLORS.secondary,\n    marginTop: StatusBar.currentHeight\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/Admin/Documents/bensamirWork/react-native/mushtryati/screens/Home.js"],"names":["LinearGradient","React","Categories","Header","ReastaurentItems","localRestaurents","SearchBar","COLORS","screens","icons","IonIcons","Animated","useSharedValue","withTiming","useAnimatedStyle","Easing","Index","FilterModal","useDrawerStatus","Home","drawerAnimationStyle","navigation","opened","isDrawerOpen","useState","home","selectedTab","setSelectedTab","showFilterModal","setShowFilterModal","screenwidth","Dimensions","get","width","screenheight","height","showModal","onChangeStyle","StyleSheet","create","innerStyle","backgroundColor","primary","TabButton","label","icon","isFocused","onPress","bgStyle","flexStyle","flex","alignItems","justifyContent","flexDirection","borderRadius","white","black","marginLeft","color","secondary","padding","paddingTop","StatusBar","currentHeight","x","y","transparent","position","left","right","borderTopLeftRadius","borderTopRightRadius","paddingHorizontal","paddingBottom","search","cart","favourite","notification","styles","container","marginTop"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\r\nimport React from 'react';\r\nimport { StyleSheet, SafeAreaView, Text, View, StatusBar, Platform, ScrollView,TouchableWithoutFeedback, Dimensions } from 'react-native';\r\nimport Categories from '../components/Home/Categories';\r\nimport Header from '../components/Home/Header';\r\nimport ReastaurentItems, { localRestaurents } from '../components/Home/ReastaurentItems';\r\nimport SearchBar from '../components/Home/SearchBar';\r\n\r\nimport { COLORS } from '../config/colors';\r\nimport { screens, icons } from '../config/constants';\r\nimport IonIcons from 'react-native-vector-icons/Ionicons'\r\nimport Animated, {\r\n    useSharedValue,\r\n    withTiming,\r\n    useAnimatedStyle,\r\n    Easing\r\n  } from 'react-native-reanimated';\r\nimport Index from './Index';\r\nimport FilterModal from '../components/Home/FilterModal';\r\nimport { useDrawerStatus } from '@react-navigation/drawer';\r\n\r\n\r\nconst Home = ({drawerAnimationStyle, navigation, opened}) => {\r\n \r\n    const isDrawerOpen = useDrawerStatus() === 'open';\r\n\r\n\r\n\r\nconst [selectedTab, setSelectedTab] = React.useState(screens.home);\r\nconst [showFilterModal, setShowFilterModal] = React.useState(false);\r\nlet screenwidth = Dimensions.get('window').width;\r\n    let screenheight = Dimensions.get('window').height;\r\nconst showModal = () => {\r\n    setShowFilterModal(!showFilterModal);\r\n  }\r\nconst onChangeStyle = StyleSheet.create({ \r\n        innerStyle:{\r\n            backgroundColor:COLORS.primary\r\n        }\r\n})\r\n  \r\n\r\nconst TabButton =({label, icon, isFocused, onPress, innerStyle, bgStyle,flexStyle }) =>{\r\n    \r\n \r\n    return(\r\n        <TouchableWithoutFeedback\r\n            onPress={onPress}\r\n           \r\n        >\r\n            <Animated.View\r\n            style={[\r\n                {\r\n                    flex:flexStyle,\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center', \r\n                    \r\n                    },      \r\n            ]}>\r\n                \r\n                <Animated.View\r\n                style={[\r\n                    {\r\n                        flexDirection: 'row',\r\n                        width: \"80%\",\r\n                        height: 50,\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        borderRadius:25,\r\n                        backgroundColor: bgStyle,\r\n                        \r\n                    },\r\n                    \r\n                        \r\n                    \r\n                ]}>\r\n                    <IonIcons name={icon} size={20} color={ isFocused? COLORS.white:COLORS.black}  />\r\n                    {isFocused &&\r\n                        <Text\r\n                            numberOfLines={1}\r\n                            style={{\r\n                                marginLeft: 10,\r\n                                color: isFocused? COLORS.white:COLORS.black,\r\n                            }}\r\n                        >{ label }</Text>\r\n                    }\r\n                </Animated.View>\r\n            </Animated.View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n}\r\n\r\nif(!isDrawerOpen) {\r\n    drawerAnimationStyle= {};\r\n    \r\n}\r\nreturn (\r\n    \r\n    <Animated.View style={{\r\n        \r\n        backgroundColor: COLORS.secondary,\r\n        \r\n        borderRadius:25,\r\n        height: '100%',\r\n        ...drawerAnimationStyle\r\n        \r\n        \r\n    }}>\r\n       \r\n    <View style={{\r\n        backgroundColor: COLORS.white,\r\n        borderRadius: isDrawerOpen?25:0,\r\n        padding: 15,\r\n        paddingTop:  StatusBar.currentHeight,\r\n    }}>\r\n    <Header navigation={navigation} />\r\n    <SearchBar\r\n     showModal={showModal}\r\n    />\r\n    </View>\r\n    <ScrollView showsVerticalScrollIndicator={false}\r\n    \r\n    >\r\n    { showFilterModal &&\r\n        <FilterModal\r\n        isVisible={showFilterModal}\r\n        onClose={()=> setShowFilterModal(false)}\r\n        \r\n        />\r\n        }\r\n       {/* <ReastaurentItems restaurentData={restaurentData}/>*/} \r\n      \r\n      <Index/>\r\n\r\n    </ScrollView>\r\n    {/* Footer */}\r\n    <View \r\n    style={{\r\n        height:80,\r\n        justifyContent: 'flex-end',\r\n    }}> \r\n\r\n        {/* Shadow */}\r\n        <LinearGradient\r\n                start={{\r\n                    x: 0,\r\n                    y:0\r\n                }}\r\n                end={{\r\n                    x: 0,\r\n                    y: 4,\r\n                }}\r\n                colors={[\r\n                    COLORS.transparent,\r\n                    COLORS.primary\r\n                ]}\r\n                style={{\r\n                    position: 'absolute',\r\n                    left:0,\r\n                    right:0,\r\n                    height:50,\r\n                    borderTopLeftRadius:15,\r\n                    borderTopRightRadius:15,\r\n                }}\r\n                />\r\n                {/* Tabs */}\r\n                <View\r\n                    style={{\r\n                        flex:1,\r\n                        flexDirection: 'row',\r\n                        paddingHorizontal: 12,\r\n                        paddingBottom:10,\r\n                        paddingTop:10,\r\n                        borderTopLeftRadius:20,\r\n                        borderTopRightRadius:20,\r\n                        backgroundColor: COLORS.white,\r\n                        borderRadius: isDrawerOpen? 25:0\r\n                        \r\n\r\n                    }}>\r\n\r\n                        <TabButton\r\n                            \r\n                            label={screens.home}\r\n                            icon={icons.home}\r\n                            isFocused={selectedTab == screens.home}\r\n                            flexStyle = {selectedTab == screens.home? 4:1}\r\n                            bgStyle = {selectedTab == screens.home? COLORS.primary:COLORS.white}\r\n                            onPress={() => setSelectedTab(screens.home)}\r\n                            \r\n                        />\r\n                        <TabButton\r\n                            label={screens.search}\r\n                            icon={icons.search}\r\n                            isFocused={selectedTab == screens.search}\r\n                            flexStyle = {selectedTab == screens.search? 4:1}\r\n                            bgStyle = {selectedTab == screens.search? COLORS.primary:COLORS.white}\r\n                            onPress={() => setSelectedTab(screens.search)}\r\n                           \r\n                        />\r\n                        <TabButton\r\n                            label={screens.cart}\r\n                            icon={icons.cart}\r\n                            isFocused={selectedTab == screens.cart}\r\n                            flexStyle = {selectedTab == screens.cart? 4:1}\r\n                            bgStyle = {selectedTab == screens.cart? COLORS.primary:COLORS.white}\r\n                            onPress={() => setSelectedTab(screens.cart)}\r\n                            \r\n                            \r\n                        />\r\n                        <TabButton\r\n                            label={screens.favourite}\r\n                            icon={icons.favourite}\r\n                            isFocused={selectedTab == screens.favourite}\r\n                            flexStyle = {selectedTab == screens.favourite? 4:1}\r\n                            bgStyle = {selectedTab == screens.favourite? COLORS.primary:COLORS.white}\r\n                            onPress={() => setSelectedTab(screens.favourite)}\r\n                            \r\n                        />\r\n                        <TabButton\r\n                            label={screens.notification}\r\n                            icon={icons.notification}\r\n                            isFocused={selectedTab == screens.notification}\r\n                            flexStyle = {selectedTab == screens.notification? 4:1}\r\n                            bgStyle = {selectedTab == screens.notification? COLORS.primary:COLORS.white}\r\n                            onPress={() => setSelectedTab(screens.notification)}\r\n                            \r\n                        />\r\n\r\n\r\n                </View>\r\n    </View>\r\n</Animated.View>\r\n\r\n);\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        backgroundColor: COLORS.secondary,\r\n        marginTop: StatusBar.currentHeight,\r\n        \r\n    }\r\n})\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}